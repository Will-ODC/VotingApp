<h1>Community Decisions</h1>

<!-- Primary Action Initiative Section -->
<div class="primary-action-section">
    <% if (primaryActionInitiative) { %>
        <div class="primary-action-card">
                        <div class="action-badge">‚ö° Action Initiative</div>
                        <div class="primary-action-header">
                            <h2><a href="/polls/<%= primaryActionInitiative.id %>"><%= primaryActionInitiative.title %></a></h2>
                            <span class="category-badge category-<%= primaryActionInitiative.category || 'general' %>">
                                <%= (primaryActionInitiative.category || 'general').charAt(0).toUpperCase() + (primaryActionInitiative.category || 'general').slice(1) %>
                            </span>
                        </div>
                        <p class="primary-action-description"><%= primaryActionInitiative.description %></p>
                        
                        <div class="action-commitment">
                            <strong>Creator Commitment:</strong> <%= primaryActionInitiative.creator_username %> will implement the winning option if this initiative is approved.
                        </div>
                        
                        <div class="primary-action-meta">
                            <span class="participants">üë• <%= primaryActionInitiative.vote_count %> participants</span>
                            <% if (primaryActionInitiative.end_date) { %>
                                <span class="deadline">‚è±Ô∏è Ends: <%= formatDatePST(primaryActionInitiative.end_date) %></span>
                            <% } %>
                            <% if (primaryActionInitiative.vote_threshold) { %>
                                <span class="threshold">üéØ <%= primaryActionInitiative.vote_count %>/<%= primaryActionInitiative.vote_threshold %> votes for approval</span>
                            <% } %>
                        </div>
                        
                        <!-- Inline Voting Section -->
                        <div class="inline-voting-section" data-poll-id="<%= primaryActionInitiative.id %>">
                            <% if (locals.user) { %>
                                <% if (primaryActionInitiative.hasVoted) { %>
                                    <!-- Show results -->
                                    <div class="voting-results">
                                        <h4>You voted for: <strong><%= primaryActionInitiative.userVote.optionText %></strong></h4>
                                        <div class="results-container">
                                            <% primaryActionInitiative.options.forEach(option => { %>
                                                <div class="result-item <%= primaryActionInitiative.userVote.optionId === option.id ? 'user-choice' : '' %>">
                                                    <div class="result-header">
                                                        <span class="option-text"><%= option.option_text %></span>
                                                        <span class="vote-count"><%= option.vote_count %> votes (<%= Math.round(option.percentage) %>%)</span>
                                                    </div>
                                                    <div class="progress-bar">
                                                        <div class="progress-fill" style="width: <%= Math.round(option.percentage) %>%"></div>
                                                    </div>
                                                </div>
                                            <% }) %>
                                        </div>
                                        <p class="vote-info">You can change your vote at any time before the poll ends.</p>
                                    </div>
                                <% } else { %>
                                    <!-- Show voting options -->
                                    <div class="voting-options">
                                        <h4>Cast your vote:</h4>
                                        <% if (primaryActionInitiative.options.length > 5) { %>
                                            <input type="text" class="option-search" placeholder="Search options..." style="display: none;">
                                        <% } %>
                                        <div class="options-container" data-loading="false">
                                            <% primaryActionInitiative.options.forEach(option => { %>
                                                <button class="vote-option-btn" data-option-id="<%= option.id %>" data-option-text="<%= option.option_text %>">
                                                    <%= option.option_text %>
                                                    <span class="option-count">(<%= option.vote_count %> votes)</span>
                                                </button>
                                            <% }) %>
                                        </div>
                                        <div class="loading-message" style="display: none;">Submitting your vote...</div>
                                        <div class="error-message" style="display: none;"></div>
                                    </div>
                                <% } %>
                            <% } else { %>
                                <!-- Show login prompt -->
                                <div class="login-prompt">
                                    <h4>Join the discussion!</h4>
                                    <p>Login or create an account to vote on this important community decision.</p>
                                    <div class="auth-buttons">
                                        <a href="/auth/login" class="btn btn-action-primary">Login</a>
                                        <a href="/auth/register" class="btn btn-action-secondary">Create Account</a>
                                    </div>
                                </div>
                            <% } %>
                        </div>
                        
                        <div class="primary-action-buttons">
                            <a href="/polls/<%= primaryActionInitiative.id %>" class="btn btn-action-primary">View Full Poll</a>
                            <% if (primaryActionInitiative.action_plan) { %>
                                <button class="btn btn-action-secondary" onclick="showActionPlan()">View Action Plan</button>
                            <% } %>
                        </div>
                    </div>
                </div>
            <% } else { %>
                <div class="no-action-initiative">
                        <div class="no-action-content">
                            <h2>No Active Action Initiatives</h2>
                            <p>Action Initiatives are community-driven proposals where creators commit to taking real action based on the results.</p>
                            <% if (user) { %>
                                <a href="/polls/create" class="btn btn-action-primary">Create First Action Initiative</a>
                            <% } else { %>
                                <a href="/auth/login" class="btn btn-action-primary">Login to Create Action Initiative</a>
                            <% } %>
                        </div>
                </div>
            <% } %>
</div>

<!-- Search and Sort Controls -->
<div class="controls-section">
    <h3>All Community Discussions</h3>
    <form method="GET" action="/" class="search-sort-form">
        <div class="search-group">
            <input type="text" name="search" placeholder="Search polls..." 
                   value="<%= searchQuery || '' %>" class="search-input">
            <button type="submit" class="btn btn-primary">Search</button>
        </div>
        
        <div class="filter-group">
            <label for="category">Category:</label>
            <select name="category" id="category" class="filter-select" onchange="this.form.submit()">
                <option value="" <%= (!currentCategory) ? 'selected' : '' %>>All Categories</option>
                <option value="general" <%= (currentCategory === 'general') ? 'selected' : '' %>>General</option>
                <option value="budget" <%= (currentCategory === 'budget') ? 'selected' : '' %>>Budget</option>
                <option value="rules" <%= (currentCategory === 'rules') ? 'selected' : '' %>>Rules</option>
                <option value="partnerships" <%= (currentCategory === 'partnerships') ? 'selected' : '' %>>Partnerships</option>
                <option value="wellbeing" <%= (currentCategory === 'wellbeing') ? 'selected' : '' %>>Wellbeing</option>
                <option value="platform" <%= (currentCategory === 'platform') ? 'selected' : '' %>>Platform</option>
                <option value="governance" <%= (currentCategory === 'governance') ? 'selected' : '' %>>Governance</option>
            </select>
        </div>
        
        <div class="sort-group">
            <label for="sort">Sort by:</label>
            <select name="sort" id="sort" class="sort-select" onchange="this.form.submit()">
                <option value="popular" <%= (currentSort === 'popular') ? 'selected' : '' %>>Most Popular</option>
                <option value="recent" <%= (currentSort === 'recent') ? 'selected' : '' %>>Most Recent</option>
                <option value="active" <%= (currentSort === 'active') ? 'selected' : '' %>>Most Active</option>
            </select>
        </div>
        
        <% if ((searchQuery && searchQuery.trim()) || (currentCategory && currentCategory.trim())) { %>
            <a href="/" class="btn btn-secondary">Clear Filters</a>
        <% } %>
    </form>
</div>

<% if (searchQuery && searchQuery.trim()) { %>
    <p class="search-results">Search results for: "<%= searchQuery %>"</p>
<% } %>

<% if (polls.length === 0) { %>
    <% if (searchQuery && searchQuery.trim()) { %>
        <p class="no-polls">No polls found matching your search.</p>
        <a href="/" class="btn btn-secondary">View all polls</a>
    <% } else { %>
        <p class="no-polls">No active community decisions at the moment.</p>
        <% if (user) { %>
            <a href="/polls/create" class="btn btn-primary">Propose the first initiative!</a>
        <% } %>
    <% } %>
<% } else { %>
    <div class="polls-container">
        <div class="polls-grid">
            <% polls.forEach(poll => { %>
                <div class="poll-card <%= poll.is_action_initiative ? 'action-initiative-card' : '' %>">
                    <div class="poll-header">
                        <h3><a href="/polls/<%= poll.id %>"><%= poll.title %></a></h3>
                        <div class="poll-badges">
                            <% if (poll.is_action_initiative) { %>
                                <span class="action-badge">‚ö° Action</span>
                            <% } %>
                            <span class="category-badge category-<%= poll.category || 'general' %>">
                                <%= (poll.category || 'general').charAt(0).toUpperCase() + (poll.category || 'general').slice(1) %>
                            </span>
                        </div>
                    </div>
                    <p class="poll-description"><%= poll.description %></p>
                    <div class="poll-meta">
                        <span>Participants: <%= poll.vote_count %></span>
                        <% if (poll.end_date) { %>
                            <span>Ends: <%= formatDatePST(poll.end_date) %></span>
                        <% } %>
                    </div>
                </div>
            <% }) %>
        </div>
        <% if (polls.length > 6) { %>
            <div class="scroll-hint">
                <span>Scroll to see more polls ‚Üì</span>
            </div>
        <% } %>
    </div>
<% } %>

<style>
/* Primary Action Initiative Styles */
.primary-action-section {
    margin: 2.5rem 0 2rem 0;
    padding: 0;
    position: relative;
    z-index: 1;
}

.primary-action-card {
    background: linear-gradient(135deg, #f8fff8 0%, #e8f5e8 100%);
    border: 2px solid #28a745;
    border-radius: 8px;
    padding: 2rem;
    position: relative;
    box-shadow: 0 4px 15px rgba(40, 167, 69, 0.1);
    overflow: visible;
}

.primary-action-card > .action-badge {
    position: absolute;
    top: -14px;
    left: 16px;
    background: #28a745;
    color: white;
    padding: 0.3rem 0.75rem;
    border-radius: 15px;
    font-size: 0.8rem;
    font-weight: 600;
    box-shadow: 0 2px 6px rgba(40, 167, 69, 0.2);
    z-index: 2;
}

.primary-action-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 0.5rem;
    gap: 0.75rem;
}

.primary-action-header h2 {
    margin: 0;
    flex: 1;
    color: #155724;
    font-size: 1.75rem;
    line-height: 1.3;
}

.primary-action-header h2 a {
    color: inherit;
    text-decoration: none;
}

.primary-action-header h2 a:hover {
    text-decoration: underline;
}

.primary-action-description {
    font-size: 1.1rem;
    color: #155724;
    margin-bottom: 0.75rem;
    line-height: 1.4;
}

.action-commitment {
    background-color: rgba(40, 167, 69, 0.1);
    border-left: 3px solid #28a745;
    padding: 1rem;
    margin: 0.75rem 0;
    border-radius: 0 6px 6px 0;
    font-size: 0.85rem;
    color: #155724;
}

.primary-action-meta {
    display: flex;
    gap: 1.25rem;
    margin: 0.75rem 0;
    flex-wrap: wrap;
}

.primary-action-meta span {
    display: flex;
    align-items: center;
    gap: 0.3rem;
    color: #155724;
    font-weight: 500;
    font-size: 0.9rem;
}

.primary-action-buttons {
    display: flex;
    gap: 0.75rem;
    margin-top: 1rem;
}

.btn-action-primary {
    background: #28a745;
    color: white;
    padding: 0.5rem 1.25rem;
    border: none;
    border-radius: 5px;
    font-size: 0.95rem;
    font-weight: 600;
    text-decoration: none;
    display: inline-block;
    cursor: pointer;
    transition: all 0.2s ease;
}

.btn-action-primary:hover {
    background: #218838;
    transform: translateY(-1px);
    box-shadow: 0 3px 8px rgba(40, 167, 69, 0.25);
}

.btn-action-secondary {
    background: white;
    color: #28a745;
    border: 1.5px solid #28a745;
    padding: 0.5rem 1rem;
    border-radius: 5px;
    font-size: 0.9rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
}

.btn-action-secondary:hover {
    background: #28a745;
    color: white;
}

.no-action-initiative {
    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    border: 2px dashed #6c757d;
    border-radius: 12px;
    padding: 3rem;
    text-align: center;
}

.no-action-content h2 {
    color: #495057;
    margin-bottom: 1rem;
}

.no-action-content p {
    color: #6c757d;
    font-size: 1.1rem;
    margin-bottom: 2rem;
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
}

.controls-section {
    margin: 3rem 0 2rem 0;
    padding: 1.5rem;
    background-color: #f8f9fa;
    border-radius: 8px;
    border: 1px solid #dee2e6;
}

.controls-section h3 {
    margin: 0 0 1.5rem 0;
    color: #495057;
    font-size: 1.3rem;
}

.search-sort-form {
    display: flex;
    gap: 1rem;
    align-items: center;
    flex-wrap: wrap;
}

.search-group {
    display: flex;
    gap: 0.5rem;
    flex: 1;
    min-width: 250px;
}

.search-input {
    flex: 1;
    padding: 0.5rem;
    border: 1px solid #ddd;
    border-radius: 4px;
    font-size: 1rem;
}

.filter-group, .sort-group {
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.filter-select, .sort-select {
    padding: 0.5rem;
    border: 1px solid #ddd;
    border-radius: 4px;
    font-size: 1rem;
    background-color: white;
}

.search-results {
    font-style: italic;
    color: #666;
    margin: 1rem 0;
}

/* Poll header styles moved to main style.css for consistency */

/* Badge styles moved to main style.css for consistency */

.action-initiative-card {
    border-left: 3px solid #28a745;
    background: linear-gradient(135deg, #ffffff 0%, #f8fff8 100%);
}

/* Category colors moved to main style.css for consistency */

/* Scrollable Polls Container */
.polls-container {
    position: relative;
    border: 1px solid #dee2e6;
    border-radius: 8px;
    background-color: #fff;
    overflow: hidden;
}

.polls-container .polls-grid {
    max-height: 500px;
    overflow-y: auto;
    overflow-x: hidden;
    padding: 1rem;
    background: linear-gradient(to bottom, #fff 0%, #f8f9fa 100%);
}

/* Ensure poll cards within scrollable container have proper spacing */
.polls-container .poll-card {
    margin-bottom: 1rem;
}

.polls-container .poll-card:last-child {
    margin-bottom: 0;
}

.scroll-hint {
    position: sticky;
    bottom: 0;
    left: 0;
    right: 0;
    background: linear-gradient(to bottom, rgba(255,255,255,0) 0%, rgba(248,249,250,0.9) 30%, rgba(248,249,250,1) 100%);
    border-top: 1px solid rgba(222,226,230,0.5);
    padding: 0.75rem 1rem;
    text-align: center;
    z-index: 5;
}

.scroll-hint span {
    color: #6c757d;
    font-size: 0.9rem;
    font-weight: 500;
    animation: fadeInOut 2s ease-in-out infinite;
}

@keyframes fadeInOut {
    0%, 100% { opacity: 0.6; }
    50% { opacity: 1; }
}

/* Custom scrollbar for webkit browsers */
.polls-grid::-webkit-scrollbar {
    width: 8px;
}

.polls-grid::-webkit-scrollbar-track {
    background: #f1f1f1;
    border-radius: 4px;
}

.polls-grid::-webkit-scrollbar-thumb {
    background: #c1c1c1;
    border-radius: 4px;
    transition: background 0.3s ease;
}

.polls-grid::-webkit-scrollbar-thumb:hover {
    background: #a8a8a8;
}

/* Action Plan Modal */
.action-plan-modal {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0,0,0,0.4);
}

.action-plan-modal-content {
    background-color: #fefefe;
    margin: 10% auto;
    padding: 20px;
    border: none;
    border-radius: 8px;
    width: 80%;
    max-width: 600px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.action-plan-modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
    border-bottom: 1px solid #dee2e6;
    padding-bottom: 1rem;
}

.action-plan-modal-header h3 {
    margin: 0;
    color: #155724;
}

.close-action-plan {
    color: #999;
    font-size: 28px;
    font-weight: bold;
    cursor: pointer;
}

.close-action-plan:hover {
    color: #000;
}

.action-plan-content {
    background-color: #f8fff8;
    border: 1px solid #d4edda;
    border-radius: 6px;
    padding: 1rem;
    margin: 1rem 0;
    line-height: 1.6;
}

/* Inline Voting Styles */
.inline-voting-section {
    margin: 1rem 0;
    padding: 1.5rem;
    background-color: rgba(255, 255, 255, 0.7);
    border-radius: 6px;
    border: 1px solid rgba(40, 167, 69, 0.2);
    overflow-y: auto;
}

.voting-options h4,
.voting-results h4,
.login-prompt h4 {
    margin: 0 0 0.75rem 0;
    color: #155724;
    font-size: 1rem;
}

.options-container {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    margin: 0.75rem 0;
}

.vote-option-btn {
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;
    padding: 0.6rem 1rem;
    background: white;
    border: 1.5px solid #e9ecef;
    border-radius: 5px;
    font-size: 0.9rem;
    color: #495057;
    cursor: pointer;
    transition: all 0.15s ease;
    text-align: left;
}

.vote-option-btn:hover {
    border-color: #28a745;
    background-color: #f8fff8;
    transform: translateX(3px);
}

.vote-option-btn:active {
    transform: translateX(2px);
}

.option-count {
    font-size: 0.8rem;
    color: #6c757d;
    white-space: nowrap;
}

.option-search {
    width: 100%;
    padding: 0.5rem;
    margin-bottom: 0.75rem;
    border: 1px solid #ddd;
    border-radius: 5px;
    font-size: 0.9rem;
}

.loading-message {
    text-align: center;
    color: #28a745;
    font-weight: 500;
    padding: 0.75rem;
    font-size: 0.9rem;
}

.error-message {
    text-align: center;
    color: #dc3545;
    font-weight: 500;
    padding: 0.75rem;
    background-color: #f8d7da;
    border: 1px solid #f5c6cb;
    border-radius: 5px;
    margin-top: 0.75rem;
    font-size: 0.85rem;
}

/* Results Display - Compact */
.results-container {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    margin: 0.75rem 0;
}

.result-item {
    background: white;
    padding: 0.6rem 0.8rem;
    border-radius: 5px;
    border: 1px solid #e9ecef;
}

.result-item.user-choice {
    border: 1.5px solid #28a745;
    background-color: #f8fff8;
}

.result-header {
    display: flex;
    justify-content: space-between;
    margin-bottom: 0.4rem;
    font-size: 0.85rem;
}

.progress-bar {
    height: 14px;
    background-color: #e9ecef;
    border-radius: 7px;
    overflow: hidden;
}

.progress-fill {
    height: 100%;
    background-color: #28a745;
    transition: width 0.3s ease;
}

.result-item.user-choice .progress-fill {
    background-color: #218838;
}

.vote-info {
    margin-top: 0.75rem;
    font-size: 0.8rem;
    color: #6c757d;
    text-align: center;
}

/* Login Prompt - Compact */
.login-prompt {
    text-align: center;
    padding: 0.5rem 0;
}

.login-prompt p {
    margin: 0.75rem 0;
    color: #6c757d;
    font-size: 0.9rem;
}

.auth-buttons {
    display: flex;
    gap: 0.75rem;
    justify-content: center;
    margin-top: 1rem;
}

@media (max-width: 768px) {
    .search-sort-form {
        flex-direction: column;
        align-items: stretch;
    }
    
    .search-group {
        min-width: auto;
    }
    
    .primary-action-section {
        margin: 2rem 0 1.5rem 0;
    }
    
    .primary-action-card {
        padding: 1.5rem;
    }
    
    .primary-action-card > .action-badge {
        top: -12px;
        left: 12px;
        font-size: 0.75rem;
        padding: 0.25rem 0.6rem;
    }
    
    .primary-action-header h2 {
        font-size: 1.4rem;
    }
    
    .primary-action-description {
        font-size: 1rem;
    }
    
    .action-commitment {
        padding: 0.75rem;
        font-size: 0.8rem;
    }
    
    .primary-action-meta {
        flex-direction: row;
        gap: 0.75rem;
        font-size: 0.8rem;
    }
    
    .primary-action-meta span {
        font-size: 0.8rem;
    }
    
    .primary-action-buttons {
        flex-direction: row;
        gap: 0.5rem;
    }
    
    .btn-action-primary {
        padding: 0.4rem 0.9rem;
        font-size: 0.85rem;
    }
    
    .btn-action-secondary {
        padding: 0.4rem 0.8rem;
        font-size: 0.8rem;
    }
    
    .action-plan-modal-content {
        width: 95%;
        margin: 5% auto;
    }
    
    /* Mobile scrollable polls adjustments */
    .polls-grid {
        max-height: 400px;
        padding: 0.75rem;
    }
    
    .scroll-hint {
        padding: 0.5rem;
    }
    
    .scroll-hint span {
        font-size: 0.8rem;
    }
    
    /* Thicker scrollbar for mobile */
    .polls-grid::-webkit-scrollbar {
        width: 12px;
    }
    
    /* Mobile inline voting adjustments */
    .inline-voting-section {
        padding: 1rem;
        margin: 0.75rem 0;
    }
    
    .voting-options h4,
    .voting-results h4,
    .login-prompt h4 {
        font-size: 0.9rem;
        margin-bottom: 0.5rem;
    }
    
    .vote-option-btn {
        padding: 0.5rem 0.75rem;
        font-size: 0.85rem;
    }
    
    .vote-option-btn:hover {
        transform: none;
    }
    
    .option-count {
        font-size: 0.75rem;
    }
    
    .result-item {
        padding: 0.5rem 0.6rem;
    }
    
    .result-header {
        font-size: 0.8rem;
    }
    
    .progress-bar {
        height: 12px;
    }
    
    .auth-buttons {
        flex-direction: row;
        gap: 0.5rem;
    }
    
    .auth-buttons .btn {
        flex: 1;
        padding: 0.4rem 0.8rem;
        font-size: 0.85rem;
    }
}
</style>

<!-- Action Plan Modal -->
<% if (primaryActionInitiative && primaryActionInitiative.action_plan) { %>
<div id="actionPlanModal" class="action-plan-modal">
    <div class="action-plan-modal-content">
        <div class="action-plan-modal-header">
            <h3>Action Plan</h3>
            <span class="close-action-plan" onclick="hideActionPlan()">&times;</span>
        </div>
        <div class="action-plan-content">
            <%= primaryActionInitiative.action_plan %>
        </div>
        <p><strong>Deadline:</strong> <%= primaryActionInitiative.action_deadline ? formatDatePST(primaryActionInitiative.action_deadline) : 'Not set' %></p>
    </div>
</div>

<script>
function showActionPlan() {
    document.getElementById('actionPlanModal').style.display = 'block';
}

function hideActionPlan() {
    document.getElementById('actionPlanModal').style.display = 'none';
}

// Close modal when clicking outside of it
window.onclick = function(event) {
    const modal = document.getElementById('actionPlanModal');
    if (event.target === modal) {
        modal.style.display = 'none';
    }
}
</script>
<% } %>

<!-- Inline Voting JavaScript -->
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Get the inline voting section
    const votingSection = document.querySelector('.inline-voting-section');
    if (!votingSection) return;
    
    const pollId = votingSection.dataset.pollId;
    const optionsContainer = document.querySelector('.options-container');
    const optionSearch = document.querySelector('.option-search');
    const loadingMessage = document.querySelector('.loading-message');
    const errorMessage = document.querySelector('.error-message');
    
    // Handle option search functionality
    if (optionSearch) {
        // Show search input if more than 5 options
        const voteButtons = document.querySelectorAll('.vote-option-btn');
        if (voteButtons.length > 5) {
            optionSearch.style.display = 'block';
        }
        
        optionSearch.addEventListener('input', function(e) {
            const searchTerm = e.target.value.toLowerCase();
            
            voteButtons.forEach(button => {
                const optionText = button.dataset.optionText.toLowerCase();
                if (optionText.includes(searchTerm)) {
                    button.style.display = 'flex';
                } else {
                    button.style.display = 'none';
                }
            });
            
            // Check if no results
            const visibleButtons = Array.from(voteButtons).filter(btn => btn.style.display !== 'none');
            if (visibleButtons.length === 0) {
                if (!document.querySelector('.no-results')) {
                    const noResults = document.createElement('div');
                    noResults.className = 'no-results';
                    noResults.textContent = 'No options match your search';
                    noResults.style.textAlign = 'center';
                    noResults.style.color = '#6c757d';
                    noResults.style.padding = '1rem';
                    optionsContainer.appendChild(noResults);
                }
            } else {
                const noResults = document.querySelector('.no-results');
                if (noResults) noResults.remove();
            }
        });
    }
    
    // Handle voting
    const voteButtons = document.querySelectorAll('.vote-option-btn');
    voteButtons.forEach(button => {
        button.addEventListener('click', async function() {
            const optionId = this.dataset.optionId;
            const optionText = this.dataset.optionText;
            
            // Disable all buttons during submission
            voteButtons.forEach(btn => btn.disabled = true);
            
            // Show loading
            if (loadingMessage) loadingMessage.style.display = 'block';
            if (errorMessage) errorMessage.style.display = 'none';
            
            try {
                const response = await fetch(`/polls/${pollId}/vote`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Accept': 'application/json'
                    },
                    body: JSON.stringify({ optionId: optionId })
                });
                
                const data = await response.json();
                
                if (response.ok && data.success) {
                    // Successfully voted - update the UI
                    updateVotingUI(data, optionId, optionText);
                } else {
                    throw new Error(data.error || 'Failed to submit vote');
                }
            } catch (error) {
                console.error('Voting error:', error);
                if (errorMessage) {
                    errorMessage.textContent = error.message || 'An error occurred while voting. Please try again.';
                    errorMessage.style.display = 'block';
                }
                // Re-enable buttons on error
                voteButtons.forEach(btn => btn.disabled = false);
            } finally {
                if (loadingMessage) loadingMessage.style.display = 'none';
            }
        });
    });
    
    function updateVotingUI(data, votedOptionId, votedOptionText) {
        // Replace voting options with results
        const votingOptions = document.querySelector('.voting-options');
        if (!votingOptions) return;
        
        const resultsHTML = `
            <div class="voting-results">
                <h4>You voted for: <strong>${votedOptionText}</strong></h4>
                <div class="results-container">
                    ${data.results && data.results.map(result => `
                        <div class="result-item ${result.optionId == votedOptionId ? 'user-choice' : ''}">
                            <div class="result-header">
                                <span class="option-text">${result.optionText}</span>
                                <span class="vote-count">${result.votes} votes (${Math.round(result.percentage)}%)</span>
                            </div>
                            <div class="progress-bar">
                                <div class="progress-fill" style="width: ${Math.round(result.percentage)}%"></div>
                            </div>
                        </div>
                    `).join('')}
                </div>
                <p class="vote-info">You can change your vote at any time before the poll ends.</p>
            </div>
        `;
        
        votingSection.innerHTML = resultsHTML;
        
        // Update the participant count if it exists
        const participantSpan = document.querySelector('.participants');
        if (participantSpan && data.totalVotes) {
            participantSpan.innerHTML = `üë• ${data.totalVotes} participants`;
        }
        
        // Update the threshold display if it exists
        const thresholdSpan = document.querySelector('.threshold');
        if (thresholdSpan && data.voteThreshold) {
            thresholdSpan.innerHTML = `üéØ ${data.totalVotes}/${data.voteThreshold} votes for approval`;
        }
    }
});

</script>